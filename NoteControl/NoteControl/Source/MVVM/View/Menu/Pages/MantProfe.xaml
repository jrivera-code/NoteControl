<Page x:Class="NoteControl.MantProfe"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      TextElement.Foreground="{DynamicResource MaterialDesignBody}"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:NoteControl"
      mc:Ignorable="d" 
      Height="700.000" Width="1200.000"
      Title="MantProfe">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- note you only need bring in these extra resource dictionaries when using non-default styles, so only bring them into your controls where the default style is not what you want -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
                <ResourceDictionary Source = "pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
                <Setter Property="Margin" Value="0 8 0 8" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FontWeight" Value="Bold" />
            </Style>
            <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MaterialDesignPasswordBox}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignComboBox}">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0 8 0 8" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FontWeight" Value="Bold" />
                <Style.Triggers>
                    <Trigger Property="IsDropDownOpen" Value="True">
                        <Setter Property="Background" Value="White" />
                        <Setter Property="Foreground" Value="Black" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Viewbox}">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Margin" Value="0 0 8 0" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource MaterialDesignSlider}">
                <Setter Property="Margin" Value="0 8 0 8" />
            </Style>

        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <Grid Margin="10,10,10,0">
            <Label x:Name="RutProf" Content="Rut Profesor : " Foreground="White"  HorizontalAlignment="Left" Margin="103,53,0,0" VerticalAlignment="Top" FontWeight="Bold"/>
            <Label x:Name="NombP" Content="Nombre" Foreground="White"  HorizontalAlignment="Left" Margin="103,108,0,0" VerticalAlignment="Top" FontWeight="Bold"/>
            <Label x:Name="EspeP" Content="Especialidad" Foreground="White"  HorizontalAlignment="Left" Margin="103,219,0,0" VerticalAlignment="Top" FontWeight="Bold" RenderTransformOrigin="3.086,0.577"/>
            <TextBox x:Name="txtRut" Text="{Binding TextBoxRut, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" HorizontalAlignment="Left" Height="48" Margin="260,27,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="226"  />
            <TextBox x:Name="txtNombre" Text="{Binding TextBoxNombreProfe, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" HorizontalAlignment="Left" Height="47" Margin="262,85,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="224"  />
            <ComboBox x:Name="CbEspe" HorizontalAlignment="Left" Margin="262,207,0,0" VerticalAlignment="Top" Width="224" Height="38"/>
            <Label x:Name="NombP_Copy" Content="Apellido" Foreground="White"  HorizontalAlignment="Left" Margin="103,159,0,0" VerticalAlignment="Top" FontWeight="Bold"/>
            <TextBox x:Name="txtApellido" Text="{Binding TextBoxApellido, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  HorizontalAlignment="Left" Height="47" Margin="262,136,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="224"  />
            <Button x:Name="BtnSave" IsEnabled="{Binding ButtonSaveEnabled,Mode=OneWay}" Command="{Binding ButtonSaveClick, Mode =TwoWay}" Content="Guardar" HorizontalAlignment="Left" Margin="644,135,0,0" VerticalAlignment="Top" Width="121"/>
            <Button x:Name="BtnDelete" IsEnabled="{Binding ButtonDeleteEnabled,Mode=OneWay}" Command="{Binding ButtonDeleteClick, Mode =TwoWay}" Content="Eliminar" HorizontalAlignment="Left" Margin="963,135,0,0" VerticalAlignment="Top" Width="121"/>
            <Button x:Name="BtnUpdate" IsEnabled="{Binding ButtonUpdateEnabled,Mode=OneWay}" Command="{Binding ButtonUpdateClick, Mode =TwoWay}" Content="Modificar" HorizontalAlignment="Left" Margin="802,135,0,0" VerticalAlignment="Top" Width="121"/>
            <DataGrid Name="dgProfe" ItemsSource="{Binding DataGridColumnProfe,IsAsync=True,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" Margin="96,288,76,88">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Rut" Binding="{Binding Rut}" />
                    <DataGridTextColumn Header="Nombre" Binding="{Binding Nombre}"/>
                    <DataGridTextColumn Header="Apellido" Binding="{Binding Apellido}"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>


    </Grid>
</Page>
